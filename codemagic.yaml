workflows:
  # ============================================
  # RECOMMENDED: Unsigned IPA for Sideloading
  # This workflow creates an unsigned IPA that can be signed later
  # Perfect for jailbroken devices or manual signing with tools like iOS App Signer
  # ============================================
  ios-unsigned-workflow:
    name: iOS Penrion (Unsigned for Sideloading)
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      vars:
        XCODE_PROJECT: "ios-app/OsuTablet/OsuTablet.xcodeproj"
        XCODE_SCHEME: "OsuTablet"
      xcode: 15.0
    scripts:
      - name: Set up build environment
        script: |
          echo "Building unsigned IPA for sideloading..."
          echo "Project: $XCODE_PROJECT"
          echo "Scheme: $XCODE_SCHEME"
      
      - name: Configure project for unsigned build
        script: |
          cd ios-app/OsuTablet
          
          # Update Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier com.penrion.osutablet" OsuTablet/Info.plist || true
          
          # Modify project settings to disable code signing
          sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' OsuTablet.xcodeproj/project.pbxproj || true
          sed -i '' 's/DEVELOPMENT_TEAM = .*;/DEVELOPMENT_TEAM = "";/g' OsuTablet.xcodeproj/project.pbxproj || true
          
          echo "✓ Project configured for unsigned build"
          
      - name: Build app for iOS device
        script: |
          set -euo pipefail
          cd ios-app/OsuTablet
          
          # Build for device without code signing
          echo "Starting xcodebuild..."
          if xcodebuild clean build \
            -project OsuTablet.xcodeproj \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build/DerivedData \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" \
            PROVISIONING_PROFILE="" \
            | xcpretty; then
            echo "✓ Build completed successfully"
          else
            echo "❌ Build failed!"
            echo "Listing build directory contents:"
            find build -name "*.app" -o -name "*.xcarchive" -o -name "*.log" | head -20
            exit 1
          fi
      
      - name: Create unsigned IPA package
        script: |
          set -euo pipefail
          cd ios-app/OsuTablet

          echo "Searching for .app bundle..."
          find build -name "*.app" -type d 2>/dev/null | head -10 || echo "No .app found"
          
          LOCAL_APP_PATH=$(find build -name "*.app" -type d 2>/dev/null | head -1 || true)
          if [ -n "$LOCAL_APP_PATH" ] && [ -d "$LOCAL_APP_PATH" ]; then
            APP_PATH="$LOCAL_APP_PATH"
            echo "Found .app at: $APP_PATH"
          else
            echo "❌ No .app bundle found in build directory"
            exit 1
          fi

          # Verify .app structure and binary
          echo "Verifying .app structure:"
          ls -la "$APP_PATH"
          
          # Check if executable exists
          APP_NAME=$(basename "$APP_PATH" .app)
          EXECUTABLE_PATH="$APP_PATH/$APP_NAME"
          
          if [ ! -f "$EXECUTABLE_PATH" ]; then
            echo "❌ Error: Missing executable binary at $EXECUTABLE_PATH"
            echo "This indicates the build did not compile properly."
            exit 1
          fi
          
          echo "✓ Found executable: $EXECUTABLE_PATH"

          rm -rf build/Payload
          mkdir -p build/Payload
          cp -R "$APP_PATH" build/Payload/

          cd build
          zip -qry Penrion-OsuTablet-Unsigned.ipa Payload
          
          echo "IPA created in: $(pwd)/Penrion-OsuTablet-Unsigned.ipa"
          ls -lh Penrion-OsuTablet-Unsigned.ipa
          
          mkdir -p ../../release/ios
          cp -f Penrion-OsuTablet-Unsigned.ipa ../../release/ios/
          
          echo "IPA copied to: $(cd ../../release/ios && pwd)/Penrion-OsuTablet-Unsigned.ipa"

      - name: Verify IPA
        script: |
          echo "Searching for IPA file..."
          find . -name "Penrion-OsuTablet-Unsigned.ipa" -type f 2>/dev/null || true
          
          # Check multiple possible locations
          if [ -f "release/ios/Penrion-OsuTablet-Unsigned.ipa" ]; then
            echo "✅ Build successful! (Found in release/ios/)"
            ls -lh "release/ios/Penrion-OsuTablet-Unsigned.ipa"
          elif [ -f "ios-app/OsuTablet/build/Penrion-OsuTablet-Unsigned.ipa" ]; then
            echo "✅ Build successful! (Found in build/)"
            ls -lh "ios-app/OsuTablet/build/Penrion-OsuTablet-Unsigned.ipa"
          else
            echo "❌ IPA not found in expected locations"
            exit 1
          fi

    artifacts:
      - release/ios/*.ipa
    
    publishing:
      # Email with IPA download link
      email:
        recipients:
          - yasicree9@gmail.com
        notify:
          success: true    # Get email when build succeeds
          failure: true    # Get email when build fails
      
      # Firebase App Distribution - Automatic upload to Firebase
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        ios:
          app_id: 1:1061806026619:ios:61b583e58fe3683abb97de
          groups:
            - testers
        
      # Uncomment below to enable Slack notifications (optional)
      # slack:
      #   channel: '#ios-builds'
      #   notify:
      #     success: true
      #     failure: false

  # ============================================
  # Alias workflow for tools referencing "ios-workflow"
  # Same as ios-unsigned-workflow, kept for compatibility
  # ============================================
  ios-workflow:
    name: iOS Penrion (Unsigned alias for compatibility)
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      vars:
        XCODE_PROJECT: "ios-app/OsuTablet/OsuTablet.xcodeproj"
        XCODE_SCHEME: "OsuTablet"
      xcode: 15.0
    scripts:
      - name: Set up build environment
        script: |
          echo "Building unsigned IPA for sideloading (ios-workflow alias)..."
          echo "Project: $XCODE_PROJECT"
          echo "Scheme: $XCODE_SCHEME"
      - name: Configure project for unsigned build
        script: |
          cd ios-app/OsuTablet
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier com.penrion.osutablet" OsuTablet/Info.plist || true
          sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' OsuTablet.xcodeproj/project.pbxproj || true
          sed -i '' 's/DEVELOPMENT_TEAM = .*;/DEVELOPMENT_TEAM = "";/g' OsuTablet.xcodeproj/project.pbxproj || true
      - name: Build app for iOS device
        script: |
          set -euo pipefail
          cd ios-app/OsuTablet
          echo "Starting xcodebuild..."
          if xcodebuild clean build \
            -project OsuTablet.xcodeproj \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build/DerivedData \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" \
            PROVISIONING_PROFILE="" \
            | xcpretty; then
            echo "✓ Build completed successfully"
          else
            echo "❌ Build failed!"
            find build -name "*.app" -o -name "*.log" | head -10
            exit 1
          fi
      - name: Create unsigned IPA package
        script: |
          set -euo pipefail
          cd ios-app/OsuTablet

          echo "Searching for .app bundle..."
          find build -name "*.app" -type d 2>/dev/null | head -10 || echo "No .app found"
          
          LOCAL_APP_PATH=$(find build -name "*.app" -type d 2>/dev/null | head -1 || true)
          if [ -n "$LOCAL_APP_PATH" ] && [ -d "$LOCAL_APP_PATH" ]; then
            APP_PATH="$LOCAL_APP_PATH"
            echo "Found .app at: $APP_PATH"
          else
            echo "❌ No .app bundle found in build directory"
            exit 1
          fi

          # Verify .app structure and binary
          echo "Verifying .app structure:"
          ls -la "$APP_PATH"
          
          # Check if executable exists
          APP_NAME=$(basename "$APP_PATH" .app)
          EXECUTABLE_PATH="$APP_PATH/$APP_NAME"
          
          if [ ! -f "$EXECUTABLE_PATH" ]; then
            echo "❌ Error: Missing executable binary at $EXECUTABLE_PATH"
            echo "This indicates the build did not compile properly."
            echo "Contents of .app:"
            find "$APP_PATH" -type f | head -10
            exit 1
          fi
          
          echo "✓ Found executable: $EXECUTABLE_PATH"
          file "$EXECUTABLE_PATH" | head -1

          rm -rf build/Payload
          mkdir -p build/Payload
          cp -R "$APP_PATH" build/Payload/

          cd build
          zip -qry Penrion-OsuTablet-Unsigned.ipa Payload
          
          echo "IPA created, copying to release folder..."
          mkdir -p ../../release/ios
          cp -f Penrion-OsuTablet-Unsigned.ipa ../../release/ios/
          ls -lh ../../release/ios/Penrion-OsuTablet-Unsigned.ipa
          
          echo "✓ IPA created successfully"
      - name: Verify IPA
        script: |
          echo "Searching for IPA file..."
          find . -name "*.ipa" -type f 2>/dev/null | head -5 || true
          
          if [ -f "release/ios/Penrion-OsuTablet-Unsigned.ipa" ]; then
            echo "✅ Build successful!"
            ls -lh "release/ios/Penrion-OsuTablet-Unsigned.ipa"
          elif [ -f "ios-app/OsuTablet/build/Penrion-OsuTablet-Unsigned.ipa" ]; then
            echo "✅ Build successful! (Found in alternate location)"
            ls -lh "ios-app/OsuTablet/build/Penrion-OsuTablet-Unsigned.ipa"
          else
            echo "❌ IPA not found"
            exit 1
          fi
    artifacts:
      - release/ios/*.ipa
    publishing:
      # Email with IPA download link
      email:
        recipients:
          - yasicree9@gmail.com
        notify:
          success: true
          failure: true
      
      # Firebase App Distribution - Automatic upload to Firebase
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        ios:
          app_id: 1:1061806026619:ios:61b583e58fe3683abb97de
          groups:
            - testers
      
      # Uncomment below to enable Slack notifications (optional)
      # slack:
      #   channel: '#ios-builds'
      #   notify:
      #     success: true
      #     failure: false
